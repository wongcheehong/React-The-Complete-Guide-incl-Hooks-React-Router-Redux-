{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\wongc\\\\projects\\\\React\\\\next-js\\\\meetups\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient } from 'mongodb';\nimport { Fragment } from 'react';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetUpDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n    title: \"First Meetup\",\n    address: \"Some street name\",\n    description: \"Some description\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://wong26:LM8Lmq9JfvaU2vh@cluster0.rl9xy.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: true0\n  }).toArray();\n  return {\n    paths: meetups.map(meetup => ({\n      params: {\n        id: meetup._id.toString()\n      }\n    })),\n    fallback: false\n  };\n}\nexport async function getStaticProps(context) {\n  // Fetch data for a single meetups\n  const meetupId = context.params;\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n        id: 'm1',\n        title: 'First Meetup',\n        address: 'Some street name',\n        description: 'Some description'\n      }\n    }\n  };\n}\nexport default MeetUpDetails;","map":{"version":3,"sources":["C:/Users/wongc/projects/React/next-js/meetups/pages/[meetupId]/index.js"],"names":["MongoClient","Fragment","MeetupDetail","MeetUpDetails","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","true0","toArray","paths","map","meetup","params","id","toString","fallback","getStaticProps","context","meetupId","console","log","props","meetupData","image","title","address","description"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,GAAyB;AACvB,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,wHADR;AAEE,IAAA,KAAK,EAAC,cAFR;AAGE,IAAA,OAAO,EAAC,kBAHV;AAIE,IAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAML,WAAW,CAACM,OAAZ,CACnB,qGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAEC;AAAP,GAA3B,EAA2CC,OAA3C,EAAtB;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAaC,MAAD,KAAa;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,EAAE,EAAEF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AAAN;AAAV,KAAb,CAAZ,CADF;AAELC,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AAEA,QAAMC,QAAQ,GAAGD,OAAO,CAACL,MAAzB;AAEAO,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEA,SAAO;AACLG,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EACH,wHAFQ;AAGVV,QAAAA,EAAE,EAAE,IAHM;AAIVW,QAAAA,KAAK,EAAE,cAJG;AAKVC,QAAAA,OAAO,EAAE,kBALC;AAMVC,QAAAA,WAAW,EAAE;AANH;AADP;AADF,GAAP;AAYD;AAED,eAAe7B,aAAf","sourcesContent":["import { MongoClient } from 'mongodb';\r\nimport { Fragment } from 'react';\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\r\n\r\nfunction MeetUpDetails() {\r\n  return (\r\n    <MeetupDetail\r\n      image=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\"\r\n      title=\"First Meetup\"\r\n      address=\"Some street name\"\r\n      description=\"Some description\"\r\n    />\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://wong26:LM8Lmq9JfvaU2vh@cluster0.rl9xy.mongodb.net/meetups?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const meetups = await meetupsCollection.find({}, { _id: true0 }).toArray();\r\n\r\n  return {\r\n    paths: meetups.map((meetup) => ({ params: { id: meetup._id.toString() } })),\r\n    fallback: false\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  // Fetch data for a single meetups\r\n\r\n  const meetupId = context.params;\r\n\r\n  console.log(meetupId);\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        image:\r\n          'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\r\n        id: 'm1',\r\n        title: 'First Meetup',\r\n        address: 'Some street name',\r\n        description: 'Some description'\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nexport default MeetUpDetails;\r\n"]},"metadata":{},"sourceType":"module"}